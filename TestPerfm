function PerformanceTest() {
    var testSizes = [10, 100, 1000, 10000, 100000];

    for (var i = 0; i < testSizes.length; i++) {
        var size = testSizes[i];
        LogMessage("ðŸ”¹ Test dla " + size + " rekordÃ³w:");

        // ðŸ“Œ **Test: PropertySetBuilder**
        var builder = new PropertySetBuilder();
        
        // âœ… Tworzenie PropertySet
        var start1 = new Date().getTime();
        for (var j = 0; j < size; j++) {
            builder.create("Node" + j, "Root");
        }
        var end1 = new Date().getTime();
        LogMessage("  âœ… Tworzenie PropertySetBuilder: " + (end1 - start1) + " ms");

        // âœ… Ustawianie struktury PropertySetBuilder
        var start2 = new Date().getTime();
        for (var j = 0; j < size; j++) {
            builder.setStructure("Node" + j, "Key1=Value" + j + ";Key2=Extra" + j);
        }
        var end2 = new Date().getTime();
        LogMessage("  âœ… Ustawianie struktury PropertySetBuilder: " + (end2 - start2) + " ms");

        // âœ… Pobieranie PropertySet PropertySetBuilder
        var start3 = new Date().getTime();
        var lastNode = builder.getPropertySet("Node" + (size - 1));
        var end3 = new Date().getTime();
        LogMessage("  âœ… Pobieranie PropertySetBuilder: " + (end3 - start3) + " ms");

        // âœ… Pobieranie wÅ‚aÅ›ciwoÅ›ci PropertySetBuilder
        var start4 = new Date().getTime();
        var props = builder.getProperties("Node" + (size - 1));
        var end4 = new Date().getTime();
        LogMessage("  âœ… Pobieranie wÅ‚aÅ›ciwoÅ›ci PropertySetBuilder: " + (end4 - start4) + " ms");

        LogMessage("---------------------------------------");

        // ðŸ“Œ **Test: ZagnieÅ¼dÅ¼ona struktura**
        var startNested1 = new Date().getTime();
        var parentName = "Root";
        for (var lvl = 0; lvl < 10; lvl++) {
            var childName = "Level" + lvl;
            builder.create(childName, parentName);
            parentName = childName;
        }
        var endNested1 = new Date().getTime();
        LogMessage("  âœ… Tworzenie zagnieÅ¼dÅ¼onej struktury (10 poziomÃ³w): " + (endNested1 - startNested1) + " ms");

        // âœ… Ustawianie wartoÅ›ci w hierarchii
        var startNested2 = new Date().getTime();
        for (var lvl = 0; lvl < 10; lvl++) {
            builder.setStructure("Level" + lvl, "NestedKey=NestedValue" + lvl);
        }
        var endNested2 = new Date().getTime();
        LogMessage("  âœ… Ustawianie struktury zagnieÅ¼dÅ¼onej: " + (endNested2 - startNested2) + " ms");

        // âœ… Pobieranie wÅ‚aÅ›ciwoÅ›ci z najgÅ‚Ä™bszego poziomu
        var startNested3 = new Date().getTime();
        var nestedProps = builder.getProperties("Level9");
        var endNested3 = new Date().getTime();
        LogMessage("  âœ… Pobieranie wÅ‚aÅ›ciwoÅ›ci z najgÅ‚Ä™bszego poziomu: " + (endNested3 - startNested3) + " ms");

        LogMessage("---------------------------------------");
    }
}
